name: Test
on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev
jobs:
  test:
    strategy:
      matrix:
        operating-system:
          - ubuntu-latest
        php-version:
          - '8.1'
        dependency-stability: ['prefer-stable']
        laravel: [ '9.*' ]
        include:
            - laravel: 9.*
              testbench: 7.*

    name: P${{ matrix.php-versions }} - L${{ matrix.laravel }} - ${{ matrix.dependency-stability }} - ${{ matrix.operating-system}}

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    runs-on: ${{ matrix.operating-system }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: bcmath, ctype, fileinfo, json, mbstring, openssl, pdo, tokenizer, xml
          coverage: none

      - name: Get composer cache directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"
      - uses: actions/cache@v2
        id: actions-cache
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Prepare the environment
        run: cp .env.example .env

      - name: Install Laravel Dependencies
        run: |
          composer require "laravel/framework:${{ matrix.laravel }}" "orchestra/testbench:${{ matrix.testbench }}" --no-interaction --no-update
          composer update --${{ matrix.dependency-stability }} --prefer-dist --no-interaction --no-suggest

      - name: Update Dependencies with latest stable
        if: matrix.dependency-stability == 'prefer-stable'
        run: composer update --prefer-stable
#      - name: Update Dependencies with lowest stable
#        if: matrix.dependency-stability == 'prefer-lowest'
#        run: composer update --prefer-stable --prefer-lowest

      - name: Setup composer cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install composer dependencies
        env:
          COMPOSER_AUTH: ${{ secrets.COMPOSER_AUTH }}
        run: composer install --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      - name: Generate application key
        run: php artisan key:generate

      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache database
      - name: Create SQLite DB
        run: touch database/database.sqlite
      - name: Run Migrations
        env:
          SESSION_DRIVER: array
          DB_CONNECTION: sqlite
          DB_DATABASE: ":memory:"

        run: php artisan migrate

      - name: Show dir
        run: pwd
      - name: PHP Version
        run: php --version

#      - name: Execute tests (Unit and Feature tests) via PestPHP
#        # Set environment
#        env:
#          SESSION_DRIVER: array
#          DB_CONNECTION: sqlite
#          DB_DATABASE: ":memory:"
#
#        run: vendor/bin/pest
#      - uses: symfonycorp/security-checker-action@v2

      - name: Execute Code Sniffer via phpcs
        run: |
          composer require --dev squizlabs/php_codesniffer
          vendor/bin/phpcs --standard=PSR12 app

      - name: The PHP Security Checker
        uses: symfonycorp/security-checker-action@v3

      - name: Execute Code Static Analysis (PHP Stan + Larastan)
        run: |
          composer require --dev nunomaduro/larastan
          vendor/bin/phpstan analyse app -c ./vendor/nunomaduro/larastan/extension.neon  --level=9 --no-progress
